plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	maven { url "https://maven.fabricmc.net/" }
	maven { url "https://repo.spongepowered.org/repository/maven-public/" }
	maven { url 'https://jitpack.io' }
}

configurations {
	implementation.extendsFrom includeImplementation
}

dependencies {
	// Minecraft
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Mixin
	annotationProcessor "org.spongepowered:mixin:0.8.5"
	include "org.spongepowered:mixin:0.8.5"
	
	// GSON - farklı bir yaklaşım
	implementation('com.google.code.gson:gson:2.8.9') {
		exclude module: 'gson'
	}
}

processResources {
	inputs.property "version", project.version
	inputs.property "minecraft_version", project.minecraft_version
	inputs.property "loader_version", project.loader_version

	filesMatching("fabric.mod.json") {
		expand(
			"version": project.version,
			"minecraft_version": project.minecraft_version,
			"loader_version": project.loader_version
		)
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// Gradle'ı temizlemek için yeni task
task cleanAll(type: Delete) {
	delete buildDir
	delete ".gradle"
}